plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.rectle'
version = '0.0.1'
sourceCompatibility = '17'

ext {
    springBootVersion = '2.7.5'
    springSecurityVersion = '5.7.3'
    mapStructVersion = '1.5.3.Final'
    lombokVersion = '1.18.24'
    junitVersion = '5.9.0'
    mockitoVersion = '4.8.0'
    googleOauthClientVersion = '1.34.1'
    googleOauth2LibraryVersion = '1.12.1'
    jawaJwtVersion = '4.2.1'
    mysqlConnectorVersion = '8.0.31'
    springBootDataJpaVersion = '2.7.5'
    flywayVersion = '9.8.2'
    springGcpVersion = '3.4.0'
    springCloudVersion = '3.1.5'
    openFeignVersion = '11.7'
    springFeignVersion = '3.0.5'
    nettySocketIoVersion = '1.7.23'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
    implementation "org.springframework.security:spring-security-oauth2-client:$springSecurityVersion"
    implementation "com.google.oauth-client:google-oauth-client:$googleOauthClientVersion"
    implementation "com.google.auth:google-auth-library-oauth2-http:$googleOauth2LibraryVersion"
    implementation "com.auth0:java-jwt:$jawaJwtVersion"
    implementation "mysql:mysql-connector-java:$mysqlConnectorVersion"
    implementation "org.flywaydb:flyway-core:$flywayVersion"
    implementation "org.flywaydb:flyway-mysql:$flywayVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootDataJpaVersion"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:$springFeignVersion"
    implementation "io.github.openfeign:feign-jackson:$openFeignVersion"
    implementation "com.corundumstudio.socketio:netty-socketio:$nettySocketIoVersion"

    implementation "com.google.cloud:spring-cloud-gcp-starter-sql-mysql:${springGcpVersion}"
    implementation "com.google.cloud:spring-cloud-gcp-starter-logging:${springGcpVersion}"
    implementation "com.google.cloud:spring-cloud-gcp-starter-storage:${springGcpVersion}"
    implementation "com.google.cloud:spring-cloud-gcp-dependencies:${springGcpVersion}"
    implementation "org.springframework.cloud:spring-cloud-context:${springCloudVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:${springCloudVersion}"

    implementation "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation "org.mapstruct:mapstruct:$mapStructVersion"
    implementation "org.mapstruct:mapstruct-processor:$mapStructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

    testImplementation "io.projectreactor:reactor-test:$springBootVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.springframework.security:spring-security-test:$springSecurityVersion"
}

tasks.named('test') {
    useJUnitPlatform()
}
